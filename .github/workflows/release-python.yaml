name: Release Executable

on:
  push:
    tags:
      - "v*" # Trigger on version tags

permissions:
  contents: write

jobs:
  # Windows Build Job
  windows-build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Retrieve Python Version on Windows
        id: get_python_version
        run: |
          $python_version = & python --version
          Write-Host "Python Version: $python_version"
          $env:PYTHON_VERSION = $python_version.Split(' ')[1]
          Write-Host "Setting PYTHON_VERSION=$($env:PYTHON_VERSION)"
          echo "PYTHON_VERSION=$($env:PYTHON_VERSION)" >> $env:GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pyinstaller

      - name: Build Executable using PyInstaller for Windows
        run: |
          pyinstaller --onefile --console --name plexsyncer-${{ env.PYTHON_VERSION }}-win --distpath dist --workpath build --specpath spec cli.py  # Windows build

      - name: Upload Windows Executable as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plexsyncer-executable-windows-${{ github.run_id }}-${{ env.PYTHON_VERSION }}
          path: dist/plexsyncer*

    outputs:
      python-version: ${{ env.PYTHON_VERSION }}

  # Linux and macOS Build Job
  linux-macos-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.x]
    runs-on: ${{ matrix.os }}

    outputs:
      python-version: ${{ matrix.python-version }}
      runner-os: ${{ runner.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r dev-requirements.txt
          pip install pyinstaller

      - name: Build Executable using PyInstaller for ${{ runner.os }}
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            pyinstaller --onefile --console --name plexsyncer-${{ matrix.python-version }}-linux --distpath dist --workpath build --specpath spec cli.py  # Linux build
          elif [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller --onefile --console --name plexsyncer-${{ matrix.python-version }}-macos --distpath dist --workpath build --specpath spec cli.py  # macOS build
          fi

      - name: Upload ${{ runner.os }} Executable as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plexsyncer-executable-${{ github.run_id }}-${{ matrix.python-version }}-${{ runner.os }}
          path: dist/plexsyncer*

  # Release Job
  release:
    needs: [windows-build, linux-macos-build] # Depends on the build jobs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows Executable Artifact
        uses: actions/download-artifact@v4
        with:
          name: plexsyncer-executable-windows-${{ github.run_id }}-${{ needs.windows-build.outputs.python-version }}

      - name: Download Linux/macOS Executable Artifact
        uses: actions/download-artifact@v4
        with:
          name: plexsyncer-executable-${{ github.run_id }}-${{ needs.linux-macos-build.outputs.python-version }}-${{ needs.linux-macos-build.outputs.runner-os }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/plexsyncer*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
