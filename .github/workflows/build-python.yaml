name: Build Executable with PyInstaller

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.x]

    runs-on: ${{ matrix.os }}

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # Run PyInstaller to create executables
      - name: Build Executable using PyInstaller
        run: |
          if [ $RUNNER_OS == 'Windows' ]; then
            pyinstaller --onefile --noconsole --name plexsyncer --distpath dist --workpath build --specpath spec plexsynclicer.py  # Windows build
          elif [ $RUNNER_OS == 'Linux' ]; then
            pyinstaller --onefile --name plexsyncer --distpath dist --workpath build --specpath spec cli.py  # Linux build
          elif [ $RUNNER_OS == 'macOS' ]; then
            pyinstaller --onefile --name plexsyncer --distpath dist --workpath build --specpath spec cli.py  # macOS build
          fi

      # Upload the Executable as Artifact for download
      - name: Upload Executable as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: plexsyncer-executable
          path: dist/plexsyncer*
